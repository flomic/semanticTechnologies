import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.beans.PropertyChangeListener;
import java.util.LinkedList;

public class SelectReaderDialog extends JDialog {
    private JPanel contentPane;
    private JComboBox readerComboBox;

    public SelectReaderDialog() {
        //setContentPane(contentPane);
        //setModal(true);

        LinkedList<String> readers = RepoHandler.getAll(MainWindow.getRepo(), "Reader");
        for (String reader : readers) {
            readerComboBox.addItem(reader);
        }
        readerComboBox.addItem("New Reader");
        readerComboBox.addItemListener(new ReaderSelectedListener());
    }

    public String showDialog() {
        JOptionPane.showMessageDialog(null, contentPane, "Select reader", JOptionPane.PLAIN_MESSAGE);
        return (readerComboBox.getSelectedItem().toString());
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        contentPane = new JPanel();
        contentPane.setLayout(new GridLayoutManager(1, 1, new Insets(10, 10, 10, 10), -1, -1));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        contentPane.add(panel1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JLabel label1 = new JLabel();
        label1.setText("Please select a reader");
        panel1.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        readerComboBox = new JComboBox();
        final DefaultComboBoxModel defaultComboBoxModel1 = new DefaultComboBoxModel();
        readerComboBox.setModel(defaultComboBoxModel1);
        panel1.add(readerComboBox, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPane;
    }

    private class ReaderSelectedListener implements ItemListener {
        @Override
        public void itemStateChanged(ItemEvent e) {
            if (e.getStateChange() == ItemEvent.SELECTED  //if a new item is selected and it is "New Author"
                    && readerComboBox.getSelectedItem().toString().equals("New Reader")) {

                //Create an new Dialog to enter the information about the author
                Object[] options = {"Save", "Cancel"};
                AddPersonDialog apd = new AddPersonDialog(null, false);
                String o = apd.showDialog();

                if (o.equals("Save")) { //if the user wants to save the author

                    //get all the information and construct an id
                    String name = apd.getName();
                    String gender = apd.getGender();
                    String dob = apd.getDateOfBirth();
                    String id = name.replaceAll(" ", "") + "_" + dob;

                    Reader r = new Reader(id, name, gender, dob); //create a new reader
                    ModelHandler.addReader(r, MainWindow.getModel()); //add it to the model
                    MainWindow.rewriteFile();
                    MainWindow.reloadRepo();
                    readerComboBox.addItem(id); //add the item to the combobox
                    readerComboBox.setSelectedItem(id); //select the item in the combobox

                } else { //if the user selects cancel reset the selected item in the combobox
                    readerComboBox.setSelectedIndex(0);
                }
            }
        }
    }

}
